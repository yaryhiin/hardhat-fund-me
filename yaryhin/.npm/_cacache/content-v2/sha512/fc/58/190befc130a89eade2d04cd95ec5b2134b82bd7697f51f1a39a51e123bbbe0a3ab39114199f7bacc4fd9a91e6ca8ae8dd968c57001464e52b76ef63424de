{"_id":"hardhat-gas-reporter","_rev":"17-940fab4918a7dcf98c2cb2d747cb7a99","name":"hardhat-gas-reporter","dist-tags":{"beta":"1.0.0-beta.1","latest":"1.0.9","rc":"1.0.4-rc.0","para":"1.0.8-para.0"},"versions":{"1.0.0-beta.0":{"name":"hardhat-gas-reporter","version":"1.0.0-beta.0","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","buidler","buidler-plugin"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc","build":"tsc","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.0.2","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"eth-gas-reporter":"^0.2.18"},"gitHead":"783452c2a477f4320dd3489e507afeccd0638616","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.0-beta.0","_nodeVersion":"12.16.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-kLtp85qQPY2Ni2P7sBrTVakGZrhHmXskwI2AZ5MP70RDVSnAm1RiYNTxNQ8QecIIfXfiOTSDvmEljmEngTl0FA==","shasum":"7b83779dea4d2f5357bbbef04936206281d1d353","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.0-beta.0.tgz","fileCount":24,"unpackedSize":26712,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfmfqYCRA9TVsSAnZWagAASYQQAI4GadDKSq5JqkZYdhGl\nzMDozsX+6AwcFW2YP1vBdhi/pQiE5TOffpBQ9BlQ/AlG6VtEgmYyHhctyiXa\nUSbx5mNwshZIQBxjg3nyvTx1+vigWU3C1lMaCdzW/1EnzkOekPwWlsn/f1Tz\nOCrZM5zyO5BMkNM5jQL6lqEQ2tbtuF5R0optJsV472OTN01sDUTVeR4Yn8RG\nHsDXTgnvKD41yVeIF8qZ4nfooGYOO2qgSoldZeNP3w4VxcERFjz/bzL/T3m1\nFgB0N+FiYp4klvZFALjB7X8v4Pm3concAl+Ql2f2mt/UCB6+SyJTai6FVTDb\nkkEXj9JLyUvmOoqyYRv+OJ4HvRtnEvfG97H5c3v79bbGK/61piV4r1PzVKBV\nMPPQY855hwYAMqHicwSd/UJA3l5mVyoS05AkoXfs3PGTrMJDZkwL1ITq+ptk\njRC6BlRhSRY0IWqIM050Gwd8/mfs76RwTYXf1BGY61nM2V4brUiPpceW9Jqn\nygSLg6yvpAAUFsGH1rET/+sha7ALfvI/ie4izemseLO7CEm14XQiXFNa1NDc\njJfL2r6zdeXz1w4UhLcTJtGJ1AwY+hH6hS3NtfXrFeqR2b/VaD6W5FbehnoC\nHb7t7HqQlgA0zUBEeXs9ThIXYFlk7Sl6M3m+KB6Wb0XLQtRQyEdTIvoIuuWA\neEhC\r\n=y4aU\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD8IZOMfOMQSVKH4op0XjQbW1ZSzHe+3XeQFDBFzu/R6AIhAPlY7s6GYRlEzwaMkQ5YBelRoRfE9LSEQhEo8jcuglL/"}]},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.0-beta.0_1603926679652_0.28781911004362315"},"_hasShrinkwrap":false},"1.0.0-beta.1":{"name":"hardhat-gas-reporter","version":"1.0.0-beta.1","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","buidler","buidler-plugin"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc","build":"tsc","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.0.2","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"eth-gas-reporter":"^0.2.19"},"readme":"[![npm version](https://badge.fury.io/js/hardhat-gas-reporter.svg)](https://badge.fury.io/js/hardhat-gas-reporter)\n[![Build Status](https://travis-ci.org/cgewecke/hardhat-gas-reporter.svg?branch=master)](https://travis-ci.org/cgewecke/hardhat-gas-reporter)\n\n# hardhat-gas-reporter\n\n[eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter) plugin for [hardhat](http://gethardhat.com). :fuelpump:\n\n## What\n\n**A Mocha reporter for Ethereum test suites:**\n\n- Gas usage per unit test.\n- Metrics for method calls and deployments.\n- National currency costs of deploying and using your contract system.\n- CI integration with [codechecks<sup>beta</sup>](http://codechecks.io)\n\n### Example report\n\n![Screen Shot 2019-06-23 at 2 10 19 PM](https://user-images.githubusercontent.com/7332026/59982003-c30a4380-95c0-11e9-9d93-e3af979df227.png)\n\n## Installation\n\n```bash\nnpm install hardhat-gas-reporter --save-dev\n```\n\nAnd add the following to your `hardhat.config.js`:\n```js\nrequire(\"hardhat-gas-reporter\");\n```\n\nOr, if you are using TypeScript, add this to your hardhat.config.ts:\n```ts\nimport \"hardhat-gas-reporter\"\n```\n\n**Looking for buidler-gas-reporter docs?** [They moved here...][1]\n\n## Configuration\nConfiguration is optional.\n```js\nmodule.exports = {\n  gasReporter: {\n    currency: 'CHF',\n    gasPrice: 21\n  }\n}\n```\n:bulb: **Pro Tip**\n\nThe options include an `enabled` key that lets you toggle gas reporting on and off using shell\nenvironment variables. When `enabled` is false, mocha's (faster) default spec reporter is used.\nExample:\n\n```js\nmodule.exports = {\n  gasReporter: {\n    enabled: (process.env.REPORT_GAS) ? true : false\n  }\n}\n```\n## Usage\n\nThis plugin overrides the built-in `test` task. Gas reports are generated by default with:\n```\nnpx hardhat test\n```\n\n## Options / Documentation\n\nA list of options and other useful documentation can be found at [eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter)\n\n[1]: https://github.com/cgewecke/buidler-gas-reporter/tree/buidler-final#installation\n","readmeFilename":"README.md","gitHead":"3782a3c077f83f7b47a112d49e386e8e0834e68b","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.0-beta.1","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"dist":{"integrity":"sha512-QW8R2i7/J5UtgaxJUXuZAkc2WM705WGvSq0sOArohC9M6ZEupVhSfi+8vlTTZqN8xdJODnLEJ/IkbQ//FiVL9Q==","shasum":"c2e309f34f237c018eacf8604b68a8b7e416530e","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.0-beta.1.tgz","fileCount":24,"unpackedSize":28259,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfm1z+CRA9TVsSAnZWagAAECEP+wZy0q7X5SlXXvwFnlUC\nhhkW+vNFWKAJqJpCGskN5/wpUAD5Xui1uKcK8/s+zXR7sb+o+ZSPPqHkrRQX\nHdynT6WKAVQluVxE4UbUWU5jUY010Z+Gi/lmr7/NJNGA5q2dFV4trY60SHvl\nuNDyeJ6WFyGcB7FbvlEqyHkH3xf1LxgBEk7mLAvBWAc/kob4Bh5FPAg7T7SV\njgrd9pXwZLq2zlcyRcSJCuqR20/tAk5JTn9XinXid3VtlmUquetqKSgL65rO\noeOzvgODJTPlRXDxnTe0iLRdEIhJ69fFNw1e29Ey3NmBcPJ9pB6/G/x6LnVN\nscrUJj/6jcW0yszuvARwK3PC+mNNDSJKq2fo7lLXvdH0wYW05M/SO/sE+rSp\nmDhs1nFuTy14uWEm5MCCwJqg6Jo3DMzOXaQ1XPUXQlv4Bh3qCfpT3QvXQvMq\nPZxEmbO7STOObfWwrTALz9xe8u8iam7kfGMteS0rfadKPYuOMt62gq3UXU7w\nx2ApSVmkHBcIJyZOcdaweck7hS/lQaKRs6xvf2S8q4tEwY7q4WOv0j3QUElA\nZoL+jW1KgljIMaQdJgOZ0DJxRtjgx6xNd7aWf0KUfg+WisHdhPx7JBAaxgdV\nN681LRv9cn/DrQbG3duYB19wAyvdJ4N9VTrE31BwWJlNROG5JYRdxU0n/BQm\nqbfs\r\n=AM7v\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCIfT3jMRdofJficvhQgr80Lo9rKw+5BM7J1ZgAH5eoRQIgJbvLFbxewg1RkGCVqwNkMtjaPrv26qjZnpgRBZCQC1w="}]},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.0-beta.1_1604017405937_0.4521507415439363"},"_hasShrinkwrap":false},"1.0.0":{"name":"hardhat-gas-reporter","version":"1.0.0","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc","build":"tsc","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.0.2","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"eth-gas-reporter":"^0.2.19"},"gitHead":"3c6d8ed9a88360385186d3a1bfd2ee6e03c82d46","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"dist":{"integrity":"sha512-ckGLu62GSZDqTemO5EgSUdjn+Dyk4X20nryZ0gutgVnjfrTwpV7/AXoDIj93cxIGMLmui09EQR0QB0D0OIssdA==","shasum":"e5e1b2a9f5da6b32f2c7b65a6828c5b69bf3957c","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.0.tgz","fileCount":24,"unpackedSize":28281,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfm2j9CRA9TVsSAnZWagAAo3EP/0eKOfXz7e3hOX//QT/E\nTSnWywi1stha+fPo5d3Su96sNlZYcnkM9vPPbMwtQqlLSyA5nlXp/9EFjh7Q\nMOLb7Mzh1W9U4b76Nv6hUnnN0NCobWl0oxcpPLZo9kKjpQ/NB6oeTOf10hod\nNb/wZ9WdzClOQt2D/Q/DsmrMEqUI/4sAOL/97gG5UutmvpgSSaOLCJzXnQLt\nDPzE4G7vS40AJ2vER1Tuiuij51cD+2G4yzkoO/XyPMwEBiklqDFp6ayqdktP\naibsSmZTqRCSryL1zaU4eftpeGKiPiRFA/ONyLoWT1VQZzlxNUMXu0WeaXCg\nCu51FlBu+bOxokVfcxVq5dL91KmTMvV0XymqaAy2o5PwPbR2aThTMg+BfPJs\nLt1lNQ/8zVeEGsOAfXhUfFKrLsDjGL7Tp/YTOST8CDPGqoJefujSnWgxBLhs\nqAkdpVnnQ2189KQVSGN1V6miJzmtntL4BLwcFloDNjvcRgzOr8LWPfAlYAmD\nHCnyZdJXl05A7fPQdkmjSZlvSSRpBDt0XJPGjRF9xyEckrqMKcv/CCLFPGFo\nylUSVu65AL1UlA3pX74nZwm10BRuiKRq2FF7OukKFcKRSLoLXGyAH2/Boozp\nZimUxJu2PVWGc2MCQIrIMyXkgzJ4tsrnFc4VzaPpRMDbovlbo/yAW8Dz3wqJ\nH7Ew\r\n=9K6S\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIC0aF7Tf5wW8ommXS76VRN+fT0pgcWnhs5mvO1u64sSoAiBLTFtG5DjEcvYu5ggoDLe2aEh0Kba0Dizawy7pp2c1fw=="}]},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.0_1604020477033_0.5768311757522437"},"_hasShrinkwrap":false},"1.0.1":{"name":"hardhat-gas-reporter","version":"1.0.1","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc","build":"tsc","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.0.2","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"eth-gas-reporter":"^0.2.19"},"gitHead":"ad9e32a0bb5a602eee067563368adf4ffd792ee5","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.1","_nodeVersion":"12.16.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-YC+SCYIkBdRtISNbisU2BwDSelUdCrIKRsJXt3M9Jw1VF5CmtSZb8VuuOc2Zl4AMcEV2jEy6ZuAksYomPiApYQ==","shasum":"37f96da5f11e5ae34b28a68c5d972d3168165c95","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.1.tgz","fileCount":24,"unpackedSize":35665,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfqXb3CRA9TVsSAnZWagAAzfcP/jcoQCTmzMWp10ozbbmw\n07/8BLEAEjdSsNoVdoWbobt3OUsun7EcIUNRVPLu20iKfEVGtK3f2b/JgOvj\nAj4jgNQ+Scf4iPATgYOfDjJ/4jlfMqWMfVhIQY7BnJE54lZ+DSs4ST8je+4N\nq1xMvJzhYJdu8CDXTFhWhM046EEyriCnlBkIV26o35sl7tdKtwvlRL4LvO9l\ni6Al8x+mU66YzZPJ1vFRIqksU6Kno/uDwauYizFPVwEtCPc2IiNJjJjc0V4V\nf+PCAZbeWc+t8jlNDujavRBCxd9oItrkZPis7h2OiqXzKFx8rTeW0uiSbAiA\npCIP4KZbolBaO/TlyCyExSXjGKyX9hcipV5EBBNeWkEabnQAQhKQnNQH5gVK\nR5a5UhuK5fMRvzMMN20KFhLtPdeyCcOxeHlOi/1EuDNOhQswdfom12nL8gBL\nArMBtnYkj6s87hac7v/YWmrckSUQNHo0/kqN6339NeoAB0IWmrkoBpIpeALb\nPeMCXijc3vKnQQjmZB3Fhg7SDerCSSJf2Osc598/ObjJOVUvMV4xYOKe5+nW\n6WusFWTGFalF1c0fjEKPQhslG/8E+y1BaVqpgkwaNsnCQWROZhbgbS3MaVBX\nnQvmVytbZy/AdTFHLTWSxZ2cwr3JxNCrbVYwGhR3LUmEHFb8OV6NqFqf7Lav\nJWbD\r\n=nvZP\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC7LaB5PavhJgGLnlRzbEpPFiFoRl065kpHfSAcGmJVRAIhAPPwzE7HqeMvQf4qzMICg7YfP3NrDg/EcL/Lj9J/B9/d"}]},"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.1_1604941559165_0.19652557315448793"},"_hasShrinkwrap":false},"1.0.2-rc.0":{"name":"hardhat-gas-reporter","version":"1.0.2-rc.0","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc","build":"tsc","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.0.2","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"eth-gas-reporter":"^0.2.19"},"readme":"[![npm version](https://badge.fury.io/js/hardhat-gas-reporter.svg)](https://badge.fury.io/js/hardhat-gas-reporter)\n[![Build Status](https://travis-ci.org/cgewecke/hardhat-gas-reporter.svg?branch=master)](https://travis-ci.org/cgewecke/hardhat-gas-reporter)\n[![Codechecks](https://raw.githubusercontent.com/codechecks/docs/master/images/badges/badge-default.svg?sanitize=true)](https://codechecks.io)\n[![buidler](https://hardhat.org/buidler-plugin-badge.svg?1)](https://github.com/cgewecke/hardhat-gas-reporter)\n\n\n# hardhat-gas-reporter\n\n[eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter) plugin for [hardhat](http://gethardhat.com).\n\n## What\n\n**A Mocha reporter for Ethereum test suites:**\n\n- Gas usage per unit test.\n- Metrics for method calls and deployments.\n- National currency costs of deploying and using your contract system.\n- CI integration with [codechecks<sup>beta</sup>](http://codechecks.io)\n\n### Example report\n\n![Screen Shot 2019-06-23 at 2 10 19 PM](https://user-images.githubusercontent.com/7332026/59982003-c30a4380-95c0-11e9-9d93-e3af979df227.png)\n\n## Installation\n\n```bash\nnpm install hardhat-gas-reporter --save-dev\n```\n\nAnd add the following to your `hardhat.config.js`:\n```js\nrequire(\"hardhat-gas-reporter\");\n```\n\nOr, if you are using TypeScript, add this to your hardhat.config.ts:\n```ts\nimport \"hardhat-gas-reporter\"\n```\n\n**Looking for buidler-gas-reporter docs?** [They moved here...][1]\n\n## Configuration\nConfiguration is optional.\n```js\nmodule.exports = {\n  gasReporter: {\n    currency: 'CHF',\n    gasPrice: 21\n  }\n}\n```\n:bulb: **Pro Tip**\n\nThe options include an `enabled` key that lets you toggle gas reporting on and off using shell\nenvironment variables. When `enabled` is false, mocha's (faster) default spec reporter is used.\nExample:\n\n```js\nmodule.exports = {\n  gasReporter: {\n    enabled: (process.env.REPORT_GAS) ? true : false\n  }\n}\n```\n## Usage\n\nThis plugin overrides the built-in `test` task. Gas reports are generated by default with:\n```\nnpx hardhat test\n```\n\n## Continuous Integration\n\nThis reporter comes with a [codechecks](http://codechecks.io) CI integration that\ndisplays a pull request's gas consumption changes relative to its target branch in the Github UI.\nIt's like coveralls for gas. The codechecks service is free for open source and maintained by MakerDao engineer [@krzkaczor](https://github.com/krzkaczor).\n\nComplete [set-up guide here](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/codechecks.md) (it's easy).\n\n![Screen Shot 2019-06-18 at 12 25 49 PM](https://user-images.githubusercontent.com/7332026/59713894-47298900-91c5-11e9-8083-233572787cfa.png)\n\n## Options\n\n:warning: **CoinMarketCap API change** :warning:\n\nBeginning March 2020, CoinMarketCap requires an API key to access currency market\nprice data. The reporter uses an unprotected free tier key by default (10k reqs/mo). You can get\nyour own API key [here][55] and set it with the `coinmarketcap` option.\n\n| Option            | Type                   | Default                     | Description                                                                                                                                                                                                                                  |\n| ----------------- | ---------------------- | --------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| enabled          | _Boolean_               | true                    | Always generate gas reports when running the hardhat test command.                                                                                                                                                           |\n| currency          | _String_               | 'EUR'                       | National currency to represent gas costs in. Exchange rates loaded at runtime from the `coinmarketcap` api. Available currency codes can be found [here](https://coinmarketcap.com/api/documentation/v1/#section/Standards-and-Conventions). |\n| coinmarketcap     | _String_               | (unprotected API key)       | [API key][55] to use when fetching current market price data. (Use this if you stop seeing price data)                                                                                                                                       |\n| gasPrice          | _Number_               | (varies)                    | Denominated in `gwei`. Default is loaded at runtime from the `eth gas station` api                                                                                                                                                           |\n| outputFile        | _String_               | stdout                      | File path to write report output to                                                                                                                                                                                                          |\n| noColors          | _Boolean_              | false                       | Suppress report color. Useful if you are printing to file b/c terminal colorization corrupts the text.                                                                                                                                       |\n| onlyCalledMethods | _Boolean_              | true                        | Omit methods that are never called from report.                                                                                                                                                                                              |\n| rst               | _Boolean_              | false                       | Output with a reStructured text code-block directive. Useful if you want to include report in RTD                                                                                                                                            |\n| rstTitle          | _String_               | \"\"                          | Title for reStructured text header (See Travis for example output)                                                                                                                                                                           |\n| showTimeSpent     | _Boolean_              | false                       | Show the amount of time spent as well as the gas consumed                                                                                                                                                                                    |\n| excludeContracts  | _String[]_             | []                          | Contract names to exclude from report. Ex: `['Migrations']`                                                                                                                                                                                  |\n| src               | _String_               | \"contracts\"                 | Folder in root directory to begin search for `.sol` files. This can also be a path to a subfolder relative to the root, e.g. \"planets/annares/contracts\"                                                                                     |\n| url               | _String_               | `http://localhost:8545` (or network value) | RPC client url                                                                                                                                                                                                  |\n| proxyResolver     | _Function_             | none                        | Custom method to resolve identity of methods managed by a proxy contract.                                                                                                                                                                    |\n| showMethodSig     | _Boolean_              | false                       | Display complete method signatures. Useful when you have overloaded methods you can't tell apart.                                                                                                                                            |\n| maxMethodDiff     | _Number_               | undefined                   | Codechecks failure threshold, triggered when the % diff for any method is greater than `number` (integer)                                                                                                                                    |\n| maxDeploymentDiff | _Number_               | undefined                   | Codechecks failure threshold, triggered when the % diff for any deployment is greater than `number` (integer)                                                                                                                                |\n| remoteContracts | _RemoteContract[]_               | `[]`                  | Contracts\npre-deployed to a (forked) network the reporter should collect gas usage data for. (See [RemoteContract type][44])                                |\n\n[55]: https://coinmarketcap.com/api/pricing/\n\n\n## Documentation\n\nOther useful documentation can be found at [eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter)\n\n[1]: https://github.com/cgewecke/buidler-gas-reporter/tree/buidler-final#installation\n","readmeFilename":"README.md","gitHead":"3c71d08cfd0d9226a1f65aef3d8dd0f1cdebee67","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.2-rc.0","_nodeVersion":"12.16.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-MiIEMYkHLWVtX+BnHNs2vmIHDMWY0L/W6aMLreYHlR5oIqQwxq7ZiNsOjsjWbvoMQRH86nVORQdT+ZyH/7gaaQ==","shasum":"65980513ec0c7fcb1ecd0ef6d29e001d9cd6bcb8","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.2-rc.0.tgz","fileCount":24,"unpackedSize":39632,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfswSqCRA9TVsSAnZWagAA/tsP/jyZC/MockswhsaldObC\nEU8RWaQzwyyAboSiUu2ej0azYdnrh+Toay859DlTOBBs8K8JGH2xWZv+ZIBa\nmTptU3E5zlXdRVsYvdc+ecDC+DcbQ2NOvqSHHrzIYlliM8i8BaqjlwgHD+4g\nLhUS23T269ONID4kquIxQQGZWz7ttU7EHt0tHQZgRa8xNxWERVz9Yk4WxMtL\nTpqeoujszYW9dc3HU0SPS4DiOmmA0h4n47+6SsFtXcqQPT7Xn0szlvZMo0vq\nXpWROx+yvF65vvuGOx3zApjh80C2PaknyuaZ4rVc0WiLQaQm8elnwhbwKmxB\nOJAAjDOPQ5Er6+viyKiVjxZ1lT3UFkBYwSSW2+4Lgoc3BmQ3AupHQ85Z7GJC\nJ01NnVgA1MspatvG5mB6z8Zzvx6HFOsoyIvI2ex0Vme0TX/AmVNFFOtC5ME8\nR9gthatedsVD5OlSICQTQFxO1nSQnsrvgTaa5RKZD4oX1OG/yHCAdwtSRKls\nDVssxBCMWhjEX48D735aKGVDntnSFWqDYnY9eQJCPjmHtSfDyxBU51WO4Nie\nhKvN67gORtpmKG99VHT7VnOMttAofOFhCc7qi/HdGJzFnVhec2U07CECPyfP\n2kevt20s0cnZ6KLJDyJN7d6yZtHhUiL1ZWVZcJ0GPM9K0RzqggSTiEI7pIfE\n2WxI\r\n=KMty\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCOsnesMRMKp13gmwn2qOr7aYL8Z7ZCWnLUKF3jvQR8rQIgG4RSVGJbk7tfkn/y6uEzpZ/WnoXzGWQff9M4+KtAZgo="}]},"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.2-rc.0_1605567658155_0.04456213567511358"},"_hasShrinkwrap":false},"1.0.2-rc.1":{"name":"hardhat-gas-reporter","version":"1.0.2-rc.1","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc","build":"tsc","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.0.2","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"eth-gas-reporter":"git+https://github.com/cgewecke/eth-gas-reporter.git#bcd8bd32d719cb8969396a236e8fb041fbd9c279","sha1":"^1.1.1"},"readme":"[![npm version](https://badge.fury.io/js/hardhat-gas-reporter.svg)](https://badge.fury.io/js/hardhat-gas-reporter)\n[![Build Status](https://travis-ci.org/cgewecke/hardhat-gas-reporter.svg?branch=master)](https://travis-ci.org/cgewecke/hardhat-gas-reporter)\n[![Codechecks](https://raw.githubusercontent.com/codechecks/docs/master/images/badges/badge-default.svg?sanitize=true)](https://codechecks.io)\n[![buidler](https://hardhat.org/buidler-plugin-badge.svg?1)](https://github.com/cgewecke/hardhat-gas-reporter)\n\n\n# hardhat-gas-reporter\n\n[eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter) plugin for [hardhat](http://gethardhat.com).\n\n## What\n\n**A Mocha reporter for Ethereum test suites:**\n\n- Gas usage per unit test.\n- Metrics for method calls and deployments.\n- National currency costs of deploying and using your contract system.\n- CI integration with [codechecks<sup>beta</sup>](http://codechecks.io)\n\n### Example report\n\n![Screen Shot 2019-06-23 at 2 10 19 PM](https://user-images.githubusercontent.com/7332026/59982003-c30a4380-95c0-11e9-9d93-e3af979df227.png)\n\n## Installation\n\n```bash\nnpm install hardhat-gas-reporter --save-dev\n```\n\nAnd add the following to your `hardhat.config.js`:\n```js\nrequire(\"hardhat-gas-reporter\");\n```\n\nOr, if you are using TypeScript, add this to your hardhat.config.ts:\n```ts\nimport \"hardhat-gas-reporter\"\n```\n\n**Looking for buidler-gas-reporter docs?** [They moved here...][1]\n\n## Configuration\nConfiguration is optional.\n```js\nmodule.exports = {\n  gasReporter: {\n    currency: 'CHF',\n    gasPrice: 21\n  }\n}\n```\n:bulb: **Pro Tip**\n\nThe options include an `enabled` key that lets you toggle gas reporting on and off using shell\nenvironment variables. When `enabled` is false, mocha's (faster) default spec reporter is used.\nExample:\n\n```js\nmodule.exports = {\n  gasReporter: {\n    enabled: (process.env.REPORT_GAS) ? true : false\n  }\n}\n```\n## Usage\n\nThis plugin overrides the built-in `test` task. Gas reports are generated by default with:\n```\nnpx hardhat test\n```\n\n## Continuous Integration\n\nThis reporter comes with a [codechecks](http://codechecks.io) CI integration that\ndisplays a pull request's gas consumption changes relative to its target branch in the Github UI.\nIt's like coveralls for gas. The codechecks service is free for open source and maintained by MakerDao engineer [@krzkaczor](https://github.com/krzkaczor).\n\nComplete [set-up guide here](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/codechecks.md) (it's easy).\n\n![Screen Shot 2019-06-18 at 12 25 49 PM](https://user-images.githubusercontent.com/7332026/59713894-47298900-91c5-11e9-8083-233572787cfa.png)\n\n## Options\n\n:warning: **CoinMarketCap API change** :warning:\n\nBeginning March 2020, CoinMarketCap requires an API key to access currency market\nprice data. The reporter uses an unprotected free tier key by default (10k reqs/mo). You can get\nyour own API key [here][55] and set it with the `coinmarketcap` option.\n\n| Option            | Type                   | Default                     | Description                                                                                                                                                                                                                                  |\n| ----------------- | ---------------------- | --------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| enabled          | _Boolean_               | true                    | Always generate gas reports when running the hardhat test command.                                                                                                                                                           |\n| currency          | _String_               | 'EUR'                       | National currency to represent gas costs in. Exchange rates loaded at runtime from the `coinmarketcap` api. Available currency codes can be found [here](https://coinmarketcap.com/api/documentation/v1/#section/Standards-and-Conventions). |\n| coinmarketcap     | _String_               | (unprotected API key)       | [API key][55] to use when fetching current market price data. (Use this if you stop seeing price data)                                                                                                                                       |\n| gasPrice          | _Number_               | (varies)                    | Denominated in `gwei`. Default is loaded at runtime from the `eth gas station` api                                                                                                                                                           |\n| outputFile        | _String_               | stdout                      | File path to write report output to                                                                                                                                                                                                          |\n| noColors          | _Boolean_              | false                       | Suppress report color. Useful if you are printing to file b/c terminal colorization corrupts the text.                                                                                                                                       |\n| onlyCalledMethods | _Boolean_              | true                        | Omit methods that are never called from report.                                                                                                                                                                                              |\n| rst               | _Boolean_              | false                       | Output with a reStructured text code-block directive. Useful if you want to include report in RTD                                                                                                                                            |\n| rstTitle          | _String_               | \"\"                          | Title for reStructured text header (See Travis for example output)                                                                                                                                                                           |\n| showTimeSpent     | _Boolean_              | false                       | Show the amount of time spent as well as the gas consumed                                                                                                                                                                                    |\n| excludeContracts  | _String[]_             | []                          | Contract names to exclude from report. Ex: `['Migrations']`                                                                                                                                                                                  |\n| src               | _String_               | \"contracts\"                 | Folder in root directory to begin search for `.sol` files. This can also be a path to a subfolder relative to the root, e.g. \"planets/annares/contracts\"                                                                                     |\n| url               | _String_               | `http://localhost:8545` (or network value) | RPC client url                                                                                                                                                                                                  |\n| proxyResolver     | _Function_             | none                        | Custom method to resolve identity of methods managed by a proxy contract.                                                                                                                                                                    |\n| showMethodSig     | _Boolean_              | false                       | Display complete method signatures. Useful when you have overloaded methods you can't tell apart.                                                                                                                                            |\n| maxMethodDiff     | _Number_               | undefined                   | Codechecks failure threshold, triggered when the % diff for any method is greater than `number` (integer)                                                                                                                                    |\n| maxDeploymentDiff | _Number_               | undefined                   | Codechecks failure threshold, triggered when the % diff for any deployment is greater than `number` (integer)                                                                                                                                |\n| remoteContracts | _RemoteContract[]_               | `[]`                  | Contracts\npre-deployed to a (forked) network the reporter should collect gas usage data for. (See [RemoteContract type][44])                                |\n\n[44]:\n[55]: https://coinmarketcap.com/api/pricing/\n\n\n## Documentation\n\nOther useful documentation can be found at [eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter)\n\n[1]: https://github.com/cgewecke/buidler-gas-reporter/tree/buidler-final#installation\n\n","readmeFilename":"README.md","gitHead":"cb218559fa4cb1e785a9b21b84ffb0f157afdad8","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.2-rc.1","_nodeVersion":"12.16.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-Us951aSDeMF+aaXY0rWJo+jgharnJMBNXkvpNnSlmei/hQYuU+HQI6ATVtc4OYb7PsosoGcEbT80mKIg70ZgPg==","shasum":"0b4e6dc8e813492fb54f5269ff62a1cc025a1f36","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.2-rc.1.tgz","fileCount":24,"unpackedSize":40974,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfsyz2CRA9TVsSAnZWagAAt2cP/RumXal7p5cYOgXTXKb8\n1tY9zF3n7z/gGX17FpU4pXCB9CrlgJsVKgF/RAsTV5g4nRKzqv9pJMSyBayM\nGFdKDwW4RnqTwb6hns7V7Jl/GiT/X5tEc5/v9OSaSdLmiIM6+XTKBuw8t/6N\n1bDzaOb8AK5CZHrmrWtm6gmjAeM5srr0CH64yyL6F+Eo3jF92hyGM1QMpMJv\nyD/f3I+7Fi6m7caCvZb8x2yfr0GGQZzFeTXd/MSYrv/fiXfCWZFCw6pDRwt0\ntRFAGFPyAevjZOnWMvYq7lNTfOWIS7OIWLaIDB/VQDu1Z6K8Q9bHnzQJ0iFz\nEqp82U4A73odg2aGnRIiPaMeKgSUFC29f2XRmoGPN42wwZjrRDdubGah1OTc\noOGS9o+GSFiWtvWLvNHvSl49ysfqz1RjceSXt+NEhH5ZmDTDjWco9HNgJee5\nB+mv0Gn4c6BMn0Ay8/jSrLsB/AeH8qEPgEB8+R73Den0O/PSc6is0cy9X3bQ\nek3QWJy1W6CrMy7xeIMA3zYfJ+cWP0DVbhZb1vwcfnpLJMheti2gyXRe4du/\npExmxbIe8V6Mbiv3R3srLzkkxoFEN5i95VQ2prveso4SQ6NiNYcqOkY5dyDB\nHOob/5JSqe4/EKalkahq3J79xOhfsvDxXS/UwHlpw6wFw1Rkw/6PLQBvPBzR\nVhjP\r\n=+lS7\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDtEvFF8TNIiZWHClOeK29goc4xuSesOOZW5BOQECHsuQIhAPkx2nVjvhpETOc+a6PeW+dCfnGNYD8Hr5KUcDfY2BQf"}]},"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.2-rc.1_1605577973626_0.16479937037954073"},"_hasShrinkwrap":false},"1.0.2":{"name":"hardhat-gas-reporter","version":"1.0.2","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc","build":"tsc","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.0.2","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"eth-gas-reporter":"^0.2.20","sha1":"^1.1.1"},"gitHead":"52650127453469371ac5cb8459234bf8d1005354","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.2","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"dist":{"integrity":"sha512-OaEAHsujMRyp1IsRAEaSf6Qh+jQTy9dnJggxAi4tWkZX0dCCV0F2AaVMOt6uu4GintIwH0Ppz/+DmInNnWdgwg==","shasum":"ceaf7ac750cd2a40cb7cba020dfabd9dceafdd54","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.2.tgz","fileCount":24,"unpackedSize":41201,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfxvnzCRA9TVsSAnZWagAAYaoP/0EAKz1QFiwO66LHiE/H\nNPiuDi6MTfMspwXAvCexMUTUTrw8stL24bq2yXyX3OsoLPdefVMPRuMeWr6C\nyLFdre2OMLB6f8nYUoN9h3m0hrBvzlW43+UGqXSd+6Aw+y6xjhN/hlp0Vgmt\nbGCFH0Z5U8bUagwd95E/Y4P5FtWMqcM0w1eeMhJKvGNdMN0+b0HPJTjzyfhr\nitFYAKW3AFayoHU7bqSUowfkvySHN3+ANvUOMa0jZowEc5vBT2asDU4sFHlH\nQ7dNCGI6RTj2ksnwRFSfgbKIATihzCSkdrosR4deCHvQFddsKFPMf8Ay/Eam\nSPo+GQKSnWrM6r++vOaRKaPPxyuRJANEZ/vCC4NI0TxE//gKXcOMJrJ4ajbL\njdiotDh7s0aC14EW5UUn+pC1mAXrZaVS4SgTLstv5VtFyYj+GU4zokGVIxkO\nVhfE4kUhO2WyZ4nJywhSnHd3AfKKTYdO/aBhZW6P1F87rKg9ByMqgJ7qCvuS\nFgB3VpWjdil4FWDgrGWBZJpBWo1XzUuuvDJFNUA5JVQTMmi5y1lGnPKDCiZ8\nOn9RVTkyM66ZGXHwrC8uo1Ga6aejkOyhk6642uMXbwtdVuzmqvF4bgpjUaPh\n0oslsP7/gSQtdi24s6Ia9R2NqyX2Ijn5SLTBPT7OGPqdeXpR8YwbQk9pM9ip\nWuu+\r\n=FEGR\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDtk/vHU/mY7ejH7ukzz25v83kSuBehEwlXwP7y4wtEaQIgN6wMUlFUGHGnB947C1uMPSxJil6pMgnhKVJ7efsAyT0="}]},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.2_1606875635414_0.582226714910347"},"_hasShrinkwrap":false},"1.0.3":{"name":"hardhat-gas-reporter","version":"1.0.3","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc","build":"tsc","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.0.2","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"eth-gas-reporter":"^0.2.20","sha1":"^1.1.1"},"gitHead":"805fc41f060ded3881b8f958f8caf05e3184b7de","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.3","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"dist":{"integrity":"sha512-Xwm26n22ZivKezoYpr90NynCGluo8QrAEtHygAFFMkpyyHSLxzinHFtCzxkJc1VRmzidVOyDoboVtapc8knf8w==","shasum":"88720dac65deff41bc7c0e49d3b84f61c9df1db4","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.3.tgz","fileCount":24,"unpackedSize":43077,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfyFb0CRA9TVsSAnZWagAAu6oP/ioWxZAnyY79Ju+J8rTf\nLOljgcyHjFhP0ZT1dB1cxaKA6uqzSbzDW/TJKI5RCCxnrHaSb6sJZsoGoJDf\nTyBXN/r7FPSf67r1QIIQWZo5w3x1nkQSXyc5iBb7Hv1WhefYRVxo8PJsbVWr\naX0QD3k2aekGlS089ekFq2NNxOv1t6UIxL1liX9zkYlRC3XSrQ/Nplfud/UO\nGQYcDJr6I0zSEamKqAoFTfdEpGqwgED019eUoeJvjKIIIcV2B7F9uDqI1OIo\nATRylsNRuYc+6UEuK1drARDYKnFSO52NcfNkEZ4l8+gsBeNp3pfkLCCLYac/\nLEvqAFyHeYt8fwGJL/6oKg0gX43z3jOqm1rtcCkjfTgUbCWPE1mpG44mzaIH\n9h2j4LjlSsWpPGAJ2kyqjmGNPskrInkUgFyUtvTteAMs1Nmf2pddZcdAwi2f\nl4iKcX/BCrdMJ3nKjl9wEucCAf3O5jJOkpe5cbUAr0IaxSXYMgrf4YjcZEoc\nbyoNMqNd+RqbLcu9Qou3fhXzO6bmAGrDRslQCl7nUnZ1Je4ouCUUG78aSugg\nW5o7GdpKbi5XiHzsHn7R0vYCCB2r7nvEzCVThhAbm/ZOX/MSOHV9Fh+hXl98\n7vSACRY6KV44yrpCUgeeB7SnzuanK++HrrvojUyGczDcEnnqRCvak2j41aTH\nRriV\r\n=MWg6\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICyzUhdVE2lSzYHrTy4pbKDcsqzreNyZ+1Px+5oWc9hMAiBA23qFh5nFXyAUlOJgXdbPegEhTpMCFWo7OMvWCHFzcg=="}]},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.3_1606964979722_0.008565531079881117"},"_hasShrinkwrap":false},"1.0.4-rc.0":{"name":"hardhat-gas-reporter","version":"1.0.4-rc.0","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc","build":"tsc","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-waffle":"^2.0.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethereum-waffle":"^3.2.1","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.0.2","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"eth-gas-reporter":"^0.2.20","sha1":"^1.1.1"},"readme":"[![npm version](https://badge.fury.io/js/hardhat-gas-reporter.svg)](https://badge.fury.io/js/hardhat-gas-reporter)\n[![Build Status](https://travis-ci.org/cgewecke/hardhat-gas-reporter.svg?branch=master)](https://travis-ci.org/cgewecke/hardhat-gas-reporter)\n[![Codechecks](https://raw.githubusercontent.com/codechecks/docs/master/images/badges/badge-default.svg?sanitize=true)](https://codechecks.io)\n[![buidler](https://hardhat.org/buidler-plugin-badge.svg?1)](https://github.com/cgewecke/hardhat-gas-reporter)\n\n\n# hardhat-gas-reporter\n\n[eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter) plugin for [hardhat](http://gethardhat.com).\n\n## What\n\n**A Mocha reporter for Ethereum test suites:**\n\n- Gas usage per unit test.\n- Metrics for method calls and deployments.\n- National currency costs of deploying and using your contract system.\n- CI integration with [codechecks<sup>beta</sup>](http://codechecks.io)\n\n### Example report\n\n![Screen Shot 2019-06-23 at 2 10 19 PM](https://user-images.githubusercontent.com/7332026/59982003-c30a4380-95c0-11e9-9d93-e3af979df227.png)\n\n## Installation\n\n```bash\nnpm install hardhat-gas-reporter --save-dev\n```\n\nAnd add the following to your `hardhat.config.js`:\n```js\nrequire(\"hardhat-gas-reporter\");\n```\n\nOr, if you are using TypeScript, add this to your hardhat.config.ts:\n```ts\nimport \"hardhat-gas-reporter\"\n```\n\n**Looking for buidler-gas-reporter docs?** [They moved here...][1]\n\n## Configuration\nConfiguration is optional.\n```js\nmodule.exports = {\n  gasReporter: {\n    currency: 'CHF',\n    gasPrice: 21\n  }\n}\n```\n:bulb: **Pro Tip**\n\nThe options include an `enabled` key that lets you toggle gas reporting on and off using shell\nenvironment variables. When `enabled` is false, mocha's (faster) default spec reporter is used.\nExample:\n\n```js\nmodule.exports = {\n  gasReporter: {\n    enabled: (process.env.REPORT_GAS) ? true : false\n  }\n}\n```\n## Usage\n\nThis plugin overrides the built-in `test` task. Gas reports are generated by default with:\n```\nnpx hardhat test\n```\n\n## Continuous Integration\n\nThis reporter comes with a [codechecks](http://codechecks.io) CI integration that\ndisplays a pull request's gas consumption changes relative to its target branch in the Github UI.\nIt's like coveralls for gas. The codechecks service is free for open source and maintained by MakerDao engineer [@krzkaczor](https://github.com/krzkaczor).\n\nComplete [set-up guide here](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/codechecks.md) (it's easy).\n\n![Screen Shot 2019-06-18 at 12 25 49 PM](https://user-images.githubusercontent.com/7332026/59713894-47298900-91c5-11e9-8083-233572787cfa.png)\n\n## Options\n\n:warning: **CoinMarketCap API change** :warning:\n\nBeginning March 2020, CoinMarketCap requires an API key to access currency market\nprice data. The reporter uses an unprotected free tier key by default (10k reqs/mo). You can get\nyour own API key [here][55] and set it with the `coinmarketcap` option.\n\n| Option            | Type                   | Default                     | Description                                                                                                                                                                                                                                  |\n| ----------------- | ---------------------- | --------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| enabled          | _Boolean_               | true                    | Always generate gas reports when running the hardhat test command.                                                                                                                                                           |\n| currency          | _String_               | 'EUR'                       | National currency to represent gas costs in. Exchange rates loaded at runtime from the `coinmarketcap` api. Available currency codes can be found [here](https://coinmarketcap.com/api/documentation/v1/#section/Standards-and-Conventions). |\n| coinmarketcap     | _String_               | (unprotected API key)       | [API key][55] to use when fetching current market price data. (Use this if you stop seeing price data)                                                                                                                                       |\n| gasPrice          | _Number_               | (varies)                    | Denominated in `gwei`. Default is loaded at runtime from the `eth gas station` api                                                                                                                                                           |\n| outputFile        | _String_               | stdout                      | File path to write report output to                                                                                                                                                                                                          |\n| noColors          | _Boolean_              | false                       | Suppress report color. Useful if you are printing to file b/c terminal colorization corrupts the text.                                                                                                                                       |\n| onlyCalledMethods | _Boolean_              | true                        | Omit methods that are never called from report.                                                                                                                                                                                              |\n| rst               | _Boolean_              | false                       | Output with a reStructured text code-block directive. Useful if you want to include report in RTD                                                                                                                                            |\n| rstTitle          | _String_               | \"\"                          | Title for reStructured text header (See Travis for example output)                                                                                                                                                                           |\n| showTimeSpent     | _Boolean_              | false                       | Show the amount of time spent as well as the gas consumed                                                                                                                                                                                    |\n| excludeContracts  | _String[]_             | []                          | Contracts (or folders) to exclude from report. Ex: `['Migrations.sol', 'Wallets/']`. (See [v1.0.3 release notes][45] for additional usage help)                                                               |\n| src               | _String_               | \"contracts\"                 | Folder in root directory to begin search for `.sol` files. This can also be a path to a subfolder relative to the root, e.g. \"planets/annares/contracts\"                                                                                     |\n| url               | _String_               | `http://localhost:8545` (or network value) | RPC client url                                                                                                                                                                                                  |\n| proxyResolver     | _Function_             | none                        | Custom method to resolve identity of methods managed by a proxy contract.                                                                                                                                                                    |\n| showMethodSig     | _Boolean_              | false                       | Display complete method signatures. Useful when you have overloaded methods you can't tell apart.                                                                                                                                            |\n| maxMethodDiff     | _Number_               | undefined                   | Codechecks failure threshold, triggered when the % diff for any method is greater than `number` (integer)                                                                                                                                    |\n| maxDeploymentDiff | _Number_               | undefined                   | Codechecks failure threshold, triggered when the % diff for any deployment is greater than `number` (integer)                                                                                                                                |\n| remoteContracts | _RemoteContract[]_               | `[]`                  | Contracts pre-deployed to a (forked) network which the reporter should collect gas usage data for. (See [RemoteContract type][44] and [usage example][47])                                |\n\n[44]: https://github.com/cgewecke/hardhat-gas-reporter/blob/master/src/types.ts#L27\n[45]: https://github.com/cgewecke/hardhat-gas-reporter/releases/tag/v1.0.3\n[47]: https://github.com/cgewecke/hardhat-gas-reporter/issues/46#issuecomment-728639165\n[55]: https://coinmarketcap.com/api/pricing/\n\n\n## Documentation\n\nOther useful documentation can be found at [eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter)\n\n[1]: https://github.com/cgewecke/buidler-gas-reporter/tree/buidler-final#installation\n\n","readmeFilename":"README.md","gitHead":"fb4ca1531bfc3d803107e5824b67b40909f88381","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.4-rc.0","_nodeVersion":"12.16.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-X7oC45/iBXf4K4AOX7Ppyi0LgLlRuX0D3PIHGzybI4KlUyMoOJdLKzYb64dk3NqwUOdgEA50c7z3he0GDBdbow==","shasum":"56b9d5c4423924164d2f928280b0443d0e65a871","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.4-rc.0.tgz","fileCount":24,"unpackedSize":45650,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf4SjoCRA9TVsSAnZWagAAJfoP/RZSttkVDRw77hKwJgTV\nmeIlr+LRwNrGfW5FyX2aJcGFaBT5hzCpWQfrhkNn1J6bDz+KXPp5SwuqvAEK\nTlUILcJMbh340X4gH/DL/Fr+TKy2I3WKR/3IleTp5S3wb/jgsuOfU1ZMHyPW\nQKgkrCSMCrdxxdNB4S+K7ETF1S5OA5Gfkrn9SPBuoqMaERpciF1CtHAj7D7a\nZkj5neqFdeTtR2DvLJNwZCIzlutuizW09fxmu3q3nkLIQebcx1KVpamYgQ3B\n0Y6q2x3JNQg4cCobPfM/keitkGcTgQoarcKD1frQdaezUBO0VVHhzynN7h0j\nJeIH3q6YuSz35oGyAYiESN3mLGzXQv2mEschY3K1h0kbJIrGrZiHxZzsrrU+\nNv6cj5zuF0SeK+8FOPfbniCURr5IvkausU43Bx3Le/1TxVoisMXh7+8YTJ6N\nml4SZsmbgHKoDb9VRJDD1caoVrmJhNMTtPDd4oIK6tIImyT0DILJrXNxxN6J\n9H8SauXQCfTgaVcymPA/zBggxprAMovYt0ql6+lXNGPjYgmSt8Vhy6sp8woC\nmACHaDRZjZ7LIw24ngxw28QsSHJ+F8k5HRys77rMnfpiABpfjs5AiZdDRbFZ\nJI7Sq8ZIw3Pmh4DvCPrEgjPBA+9TWOw4l5qVD0Rnrydidra7wvB23Add60BP\noS7J\r\n=Vle0\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCdYnEQuQWh3mrMnA02Zh6YWxmG/8Qg7Ge8oXEFDZ/KTQIhAJuEk0WryaMMmpaHxBhVu3lasZNCQHZZ1pwI+qPw40pJ"}]},"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.4-rc.0_1608591592241_0.3545798907959843"},"_hasShrinkwrap":false},"1.0.4":{"name":"hardhat-gas-reporter","version":"1.0.4","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc --project tsconfig.prod.json","build":"tsc --project tsconfig.prod.json","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-waffle":"^2.0.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethereum-waffle":"^3.2.1","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.0.2","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"eth-gas-reporter":"^0.2.20","sha1":"^1.1.1"},"gitHead":"2c0544a860f3c915bb557cf8563df05a209bdba5","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.4","_nodeVersion":"12.16.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-G376zKh81G3K9WtDA+SoTLWsoygikH++tD1E7llx+X7J+GbIqfwhDKKgvJjcnEesMrtR9UqQHK02lJuXY1RTxw==","shasum":"59e3137e38e0dfeac2e4f90d5c74160b50ad4829","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.4.tgz","fileCount":24,"unpackedSize":45703,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf4TEVCRA9TVsSAnZWagAAtG0P/RiaWjyiSjSRO098pxBp\nKPLpVAFASim7SysQowQpLI5edKCBdYoFYTCnXXdDa4XJizJGDPCuK6/HJwzF\nstF79JQShkKVnY71UDD9seq4RytitKfRBnZNP0zicgpaWl7Gd8Uv925BO+tJ\nzXIHX3ItTnDIZlDYbcvNf8mmjePuMc3vcNFsOHWu1nAUX47C0x2SRhpuga1S\nrC0amOla6k2thhMen0loi4wj8lc0f8JSaJevNGVdE2vXXoU9PIF2y9rAuI4c\nJ4Fxzl9rcj5gbj7HESW/cSiTC0WdlEYm4usYRLindFiKWw3/ulBCV6w6pWYT\nCmsz/7koYJPKfZ+Fj65cyTyCWFGQ3e1tt05bFeU1NHbhMsHlkZe4GB+XzR8Y\n6g2h19WX4MsfltlAU9Tz3KAT1FfAoEB8PmMLQ3NS2CffxnTKLgK9xJc3+LlW\nlSS/oMdByBWbjbFakIkGS9MASBm3OE6k+QV0Wc7f1Bs/9Rp43/DL0kjqiQxf\n2ToliN+2kbh8sajp7e686JMCMdFrwOIGYU7+o9MVtDM4/tR7ZDdmbK8zstjR\nPDUZd8GJb8LMtODy6AYsXwkO302PD8Q0NItZ5FwNVGf/DdtICAwl/9hCyDnW\nRX3PdAdE8pFLZSopZqraPtfG19CJ+v3LGxlaeoVpiZjm71GJlkL+FFsFp9fp\nsSlF\r\n=MwiA\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD5iKd0TWkCwzx0WGUOVzRJSa2lvJ19x5/E1Nedwo0hJQIgJaWtOOV765I0hkgP4uLw6JcU5RSwQs5yZx2R08ExSuQ="}]},"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.4_1608593685086_0.5342911360986564"},"_hasShrinkwrap":false},"1.0.5":{"name":"hardhat-gas-reporter","version":"1.0.5","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc --project tsconfig.prod.json","build":"tsc --project tsconfig.prod.json","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-waffle":"^2.0.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethereum-waffle":"^3.2.1","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.6.1","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"array-uniq":"1.0.3","eth-gas-reporter":"^0.2.23","sha1":"^1.1.1"},"gitHead":"63b878c555bbed5c676ed155af52dc2c8852fe63","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.5","_nodeVersion":"12.16.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-TLVcL9mvl8rgp8D2raEyloEHFXjgUN8Hf2q4merug6pxaQv94FrX91/nPOh4JMkTG9rxfkmkP2dMKtFvB9+OTA==","shasum":"95a3319064ec0c2ecf7e4b0642b161619e913e8e","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.5.tgz","fileCount":34,"unpackedSize":70899,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhpQXjCRA9TVsSAnZWagAAgyYP/RpM+0IXiAm5VnkzjK6e\nzNPcNh8h9NhdDVs+qA7QPbNtZLkom7U4TfbJOEOllVRi4RwDCFbmubAzEbZ+\n5qNzoH90QIq/pOmls9wlxwd1RVtLrYsGYipQoO6690vbEHJM2eMQZU3pkIT8\n+FQKAbuvZmELqy03xqFWJwT0n2nCtLG2dpnWkJ/CoiQNrDqlfHiFP8ZbrhLd\nAL1spqPb2qoWMKGhHZi6LiRdulF1ULHs24QkQqImIlIVUwvs3bCYOag1pXAc\nW/tSpTYst1RbvPegHx2mvy3/yqvZmfSYTiTTvRxxDeuq3AQu1DJd9ssBeqVF\nARQIrkelxaqlB4bfTigoGIs24VUTV7nc6q4CalD6CyTlF/+DlvN6mUoPUPC8\nnBL12pKgxNP/YdNFavFiyPH2yKBoAqmBdCys+r5xPsRqF9XQaryn4yguQREF\nHiajUHP2Jnf8M0whTNKdF3fbo+nqZSbADnx4J8AiQA0mF6mGBIWyXQ2sAEsE\nKGVL4VVIT9io5c1md7Io+5dMG1uBtHilF4GXqoSPxbm2SYPP3COC7InamHfi\ncb/axSaU15LP/jNrKlCar52cRbAD0FKqD4WoE/zzlsvdzCOVshiZWJALm+ES\n8ifG/G3ngGVAyLxNNd8n21BA8CQORiJ3VPhp5Uw384/5wlQ8au7MbSZCabXy\nv/wv\r\n=HavT\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHYkIxBr8r7lwjOoT0XeGog7JlngB7QZr7CcrOb8CSKEAiAN7H7Wt12KC/WBasdH10Wugwy3dP+N59BIA3+I4iiS4g=="}]},"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.5_1638204899635_0.5206758012145687"},"_hasShrinkwrap":false},"1.0.6":{"name":"hardhat-gas-reporter","version":"1.0.6","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc --project tsconfig.prod.json","build":"tsc --project tsconfig.prod.json","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-waffle":"^2.0.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethereum-waffle":"^3.2.1","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.6.1","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"array-uniq":"1.0.3","eth-gas-reporter":"^0.2.23","sha1":"^1.1.1"},"gitHead":"41d3e9938df34577031f46d6768d3feba6165a14","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.6","_nodeVersion":"12.16.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-LlCEmSx1dZpnxKmODb2hmP5eJ1IAM5It3NnBNTUpBTxn9g9qPPI3JQTxj8AbGEiNc3r6V+w/mXYCmiC8pWvnoQ==","shasum":"699bc0bb96e8c962c7f136a1c1f29cd3c32d569e","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.6.tgz","fileCount":34,"unpackedSize":71986,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhpSwHCRA9TVsSAnZWagAAp+QP/jsDUNxv72pSg2Es4787\n6GkJSWxfw5DXtA7diZ/VOnZZXusIv5IolpAIFFnwY7PIRf7u1aBNbaF5Pix2\nM+mRbkExv30hRmP3e8FsnfCghuyUd8+E/i+bIeuRm6vAF0Q/qNch+u9kzLva\nA3GN7rKGM+5gumnV4CAABbQtjUYCS04i5htVpcn2kuTkLtS84RP4SpZiqT/x\njLDMKt8Wjcxo3Jo9C8WvRMz+oOCsx+2fUtMzLp6C4a2yPuO1isShYL26LAJg\nPkL981jjr1/BrYgElYM6k5XQV4NKsWWj/OeeM1t62wNiB/hEg6AeZlB+ET3O\nnS3vRppVRNTVwMBs8O+53O7HL9xNBaeme4cAQnMyB5+0v8R5GM5EsTcqI5EE\nl57T0HpE9QiQUphfGGwYWc5KhVud661deYTKhB58P/p+50N/MzKwK4uAtNAL\nWuI2UaT787MUIKn2uwZx/VcmR40fXN+H5S2FPIejGhHNmJpfKrIZFQ/P/YMz\ntskKXz63nFDYSBa35AA3R4Ti/7sRKE1foIl7K8XJC7KtJGF4jpbq7Ytwljy2\nFtGs+Pn3tt8Jg9SAMVR3O3EaXID9q3KJKEvWxToCu02jvN/f5DN8aoougR4P\ndaM8nykpLPpsnUJ88CFCdXxa8+exHQC3h+dPB5ZCjjbGAP0XclSy5vmARfs7\n5i+T\r\n=CUjc\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDkmYi6xt4Rn/45D66uS0nT1POOhgmTf5isl7SB+IqGNgIhAO0hQJ1C5rzIMpS7AeYyyN/tl4RuIJgpSriPAVQGg5aj"}]},"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.6_1638214663265_0.17282437540188345"},"_hasShrinkwrap":false},"1.0.7":{"name":"hardhat-gas-reporter","version":"1.0.7","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc --project tsconfig.prod.json","build":"tsc --project tsconfig.prod.json","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-waffle":"^2.0.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethereum-waffle":"^3.2.1","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.6.1","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"array-uniq":"1.0.3","eth-gas-reporter":"^0.2.24","sha1":"^1.1.1"},"gitHead":"e7b2dd642200eca0d4c098c661b39e8d3e6ff4db","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.7","_nodeVersion":"12.16.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-calJH1rbhUFwCnw0odJb3Cw+mDmBIsHdVyutsHhA3RY6JELyFVaVxCnITYGr/crkmHqt4tQCYROy7ty6DTLkuA==","shasum":"b0e06a4f5a4da2369354991b6fa32ff002170573","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.7.tgz","fileCount":34,"unpackedSize":72128,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh251kCRA9TVsSAnZWagAAmLsP/iYEh2iUK35ZeuOos9cE\nlIIoNTYYDFp1QHUxzF+dmjzHPQwUYxoOVyCHDgyusOccB0ys1wsZq6T/7lAJ\naBK6IiSjkNUTLD/uq8sA7b5/ucz3a4ZecqjrtFHwxbhHPBBVAO1/tBaZlTRA\niPXK3n2TwxgNlo5kEcQPdtgpIrtfwZjPvxlSS8WYQd3cLH2/i9Xe4aMlpFTg\ne6i8WA6B2JERYzi12VUea1+wW2UjUaaeo4S/egXxUEVuStg+Gs+woBQD+EPT\n8TMRxnDNNDFf+JSA4PEE2djGhsAuBqdxPCermh2YmfWMphCMd+JhF5X0z0lb\neLUuuNbiPp2W70ow85cm+ObcJRVDJ6pAuib3WFZ2zofWBKq1F/jCn8KkEp5R\nxXkLg9X9pHaF5Uy+emPkPnipTHk4SGlxhx6v67P5kRRH7aShUbKjMYraW3hg\nnf7SUZLSoTq5rhE/gYpCXtSjxd3NgHr0YvzY68jTGi/eNLvZf7BIVC8A/DF+\n/BmNpJ8mIdzjoEOBqMq85gDivpT5jlGtSgAxqN1+EJzMDUk2T3K7O0pAof8X\nu3T0WJW8xP+U0TOIr13crm6QF2PHAbchZT2TfxN066lOtAlHln9l/vy952VR\nqBJQR0eDTLg1kQBXhe9bdliDXHJaU0x3bS6+Uu0Ba0i5qIHSu/YDy9+KC86I\np0+R\r\n=+Fe7\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC+04oUSxjKstSdIgZpNuYnFT851Dn+u1BL+4n4FmW7ZwIhAI+2qLmd8cdSIeOWz5QFqIqZRaRh/JcFXg3R0bZSUNRt"}]},"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.7_1641782628260_0.8537738189650985"},"_hasShrinkwrap":false},"1.0.8-para.0":{"name":"hardhat-gas-reporter","version":"1.0.8-para.0","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc --project tsconfig.prod.json","build":"tsc --project tsconfig.prod.json","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-waffle":"^2.0.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethereum-waffle":"^3.2.1","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.6.1","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"array-uniq":"1.0.3","eth-gas-reporter":"^0.2.24","sha1":"^1.1.1"},"readme":"[![npm version](https://badge.fury.io/js/hardhat-gas-reporter.svg)](https://badge.fury.io/js/hardhat-gas-reporter)\n[![Build Status](https://travis-ci.org/cgewecke/hardhat-gas-reporter.svg?branch=master)](https://travis-ci.org/cgewecke/hardhat-gas-reporter)\n[![Codechecks](https://raw.githubusercontent.com/codechecks/docs/master/images/badges/badge-default.svg?sanitize=true)](https://codechecks.io)\n[![buidler](https://hardhat.org/buidler-plugin-badge.svg?1)](https://github.com/cgewecke/hardhat-gas-reporter)\n\n\n# hardhat-gas-reporter\n\n[eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter) plugin for [hardhat](http://gethardhat.com).\n\n## What\n\n**A Mocha reporter for Ethereum test suites:**\n\n- Gas usage per unit test.\n- Metrics for method calls and deployments.\n- National currency costs of deploying and using your contract system.\n\n### Example report\n\n![Screen Shot 2019-06-23 at 2 10 19 PM](https://user-images.githubusercontent.com/7332026/59982003-c30a4380-95c0-11e9-9d93-e3af979df227.png)\n\n## Installation\n\n```bash\nnpm install hardhat-gas-reporter --save-dev\n```\n\nAnd add the following to your `hardhat.config.js`:\n```js\nrequire(\"hardhat-gas-reporter\");\n```\n\nOr, if you are using TypeScript, add this to your hardhat.config.ts:\n```ts\nimport \"hardhat-gas-reporter\"\n```\n\n**Looking for buidler-gas-reporter docs?** [They moved here...][1]\n\n## Configuration\nConfiguration is optional.\n```js\nmodule.exports = {\n  gasReporter: {\n    currency: 'CHF',\n    gasPrice: 21\n  }\n}\n```\n:bulb: **Pro Tips**\n\n**Turning the plugin on/off**\n\nThe options include an `enabled` key that lets you toggle gas reporting on and off using shell\nenvironment variables. When `enabled` is false, mocha's (faster) default spec reporter is used.\nExample:\n\n```js\nmodule.exports = {\n  gasReporter: {\n    enabled: (process.env.REPORT_GAS) ? true : false\n  }\n}\n```\n\n**Migrating from Truffle**\n\nIf you already have `eth-gas-reporter` installed in your project, make sure you uninstall it before adding this plugin.\n`hardhat-gas-reporter` manages `eth-gas-reporter` as a dependency and having multiple versions in your lockfile can stop the reporter\nfrom working correctly.\n\n## Usage\n\nThis plugin overrides the built-in `test` task. Gas reports are generated by default with:\n```\nnpx hardhat test\n```\n\n### Options\n\n:warning: **CoinMarketCap API change** :warning:\n\nBeginning March 2020, CoinMarketCap requires an API key to access currency market\nprice data. The reporter uses an unprotected free tier key by default (10k reqs/mo). You can get\nyour own API key [here][55] and set it with the `coinmarketcap` option.\n\nIn order to retrieve the gas price of a particular blockchain, you can configure the `token` and `gasPriceApi` (API key rate limit may apply).\n\n**NOTE**: HardhatEVM and ganache-cli implement the Ethereum blockchain. To get accurate gas measurements for other chains you may need to run your tests against development clients developed specifically for those networks.\n\n| Option            | Type                   | Default                                                                    | Description                                                                                                                                                                                                                                  |\n| ----------------- | ---------------------- | -------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| enabled          | _Boolean_               | true                    | Always generate gas reports when running the hardhat test command.                                                                                                                                                           |\n| currency          | _String_               | 'EUR'                                                                      | National currency to represent gas costs in. Exchange rates loaded at runtime from the `coinmarketcap` api. Available currency codes can be found [here](https://coinmarketcap.com/api/documentation/v1/#section/Standards-and-Conventions). |\n| coinmarketcap     | _String_               | (unprotected API key)                                                      | [API key][55] to use when fetching current market price data. (Use this if you stop seeing price data)                                                                                                                                       |\n| gasPrice          | _Number_               | (varies)                                                                   | Denominated in `gwei`. Default is loaded at runtime from the `eth gas station` api                                                                                                                                                           |\n| token             | _String_               | 'ETH'                                                                      | The reference token for gas price                                                                                                                                                                                                            |\n| gasPriceApi       | _String_               | [Etherscan](https://api.etherscan.io/api?module=proxy&action=eth_gasPrice) | The API endpoint to retrieve the gas price. Find below other networks.                                                                                                                                                                       |\n| outputFile        | _String_               | stdout                                                                     | File path to write report output to                                                                                                                                                                                                          |\n| noColors          | _Boolean_              | false                                                                      | Suppress report color. Useful if you are printing to file b/c terminal colorization corrupts the text.                                                                                                                                       |\n| onlyCalledMethods | _Boolean_              | true                                                                       | Omit methods that are never called from report.                                                                                                                                                                                              |\n| rst               | _Boolean_              | false                                                                      | Output with a reStructured text code-block directive. Useful if you want to include report in RTD                                                                                                                                            |\n| rstTitle          | _String_               | \"\"                                                                         | Title for reStructured text header (See Travis for example output)                                                                                                                                                                           |\n| showTimeSpent     | _Boolean_              | false                                                                      | Show the amount of time spent as well as the gas consumed                                                                                                                                                                                    |\n| excludeContracts  | _String[]_             | []                          | Contracts (or folders) to exclude from report. Ex: `['Migrations.sol', 'Wallets/']`. (See [v1.0.3 release notes][45] for additional usage help)                                                               |\n| src               | _String_               | \"contracts\"                                                                | Folder in root directory to begin search for `.sol` files. This can also be a path to a subfolder relative to the root, e.g. \"planets/annares/contracts\"                                                                                     |\n| url               | _String_               | `web3.currentProvider.host`                                                | RPC client url (ex: \"http://localhost:8545\")                                                                                                                                                                                                 |\n| proxyResolver     | _Function_             | none                                                                       | Custom method to resolve identity of methods managed by a proxy contract.                                                                                                                                                                    |\n| artifactType      | _Function_ or _String_ | \"truffle-v5\"                                                               | Compilation artifact format to consume. (See [advanced use](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/advanced.md).)                                                                                                     |\n| showMethodSig     | _Boolean_              | false                                                                      | Display complete method signatures. Useful when you have overloaded methods you can't tell apart.                                                                                                                                            |\n| maxMethodDiff     | _Number_               | undefined                                                                  | Codechecks failure threshold, triggered when the % diff for any method is greater than `number` (integer)                                                                                                                                    |\n| maxDeploymentDiff | _Number_               | undefined                                                                  | Codechecks failure threshold, triggered when the % diff for any deployment is greater than `number` (integer)                                                                                                                                |\n| remoteContracts | _RemoteContract[]_               | `[]`                  | Contracts pre-deployed to a (forked) network which the reporter should collect gas usage data for. (See [RemoteContract type][44] and [usage example][47])                                |\n\n[44]: https://github.com/cgewecke/hardhat-gas-reporter/blob/master/src/types.ts#L27\n[45]: https://github.com/cgewecke/hardhat-gas-reporter/releases/tag/v1.0.3\n[47]: https://github.com/cgewecke/hardhat-gas-reporter/issues/46#issuecomment-728639165\n[55]: https://coinmarketcap.com/api/pricing/\n\n#### `token` and `gasPriceApi` options example\n\n| Network            | token | gasPriceApi                                                            |\n| ------------------ | ----- | ---------------------------------------------------------------------- |\n| Ethereum (default) | ETH   | https://api.etherscan.io/api?module=proxy&action=eth_gasPrice          |\n| Binance            | BNB   | https://api.bscscan.com/api?module=proxy&action=eth_gasPrice           |\n| Polygon            | MATIC | https://api.polygonscan.com/api?module=proxy&action=eth_gasPrice       |\n| Avalanche          | AVAX  | https://api.snowtrace.io/api?module=proxy&action=eth_gasPrice          |\n| Heco               | HT    | https://api.hecoinfo.com/api?module=proxy&action=eth_gasPrice          |\n| Moonriver          | MOVR  | https://api-moonriver.moonscan.io/api?module=proxy&action=eth_gasPrice |\n\nThese APIs have [rate limits](https://docs.etherscan.io/support/rate-limits). Depending on the usage, it might require an [API Key](https://docs.etherscan.io/getting-started/viewing-api-usage-statistics).\n\n> NB: Any gas price API call which returns a JSON-RPC response formatted like this is supported: `{\"jsonrpc\":\"2.0\",\"id\":73,\"result\":\"0x6fc23ac00\"}`.\n\n\n## Documentation\n\nOther useful documentation can be found at [eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter)\n\n[1]: https://github.com/cgewecke/buidler-gas-reporter/tree/buidler-final#installation\n\n## Parallelization\n\nThis plugin also adds a Hardhat Task for merging several `gasReporterOutput.json` files, which are generated by [eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter) when [running your tests with in parallelized jobs in CI](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/gasReporterOutput.md).\n\nTo use the task you just have to give it the filepaths or a glob pattern pointing to all of the reports:\n```bash\nnpx hardhat gas-reporter:merge 'gasReporterOutput-*.json'\n```\n\nHere is an example `config.yml` file used by CircleCI to run the tests on parallel first, and then merge the reports\n\n```yaml\nversion: 2.1\n\njobs:\n  test:\n    docker:\n      - image: circleci/node:14.15.1-stretch\n    parallelism: 8\n    steps:\n      - attach_workspace:\n          at: .\n      - run:\n          name: Run tests\n          command: |\n            circleci tests glob 'test/**/*.spec.ts' |\n            circleci tests split |\n            xargs npx hardhat test\n      - run:\n          name: Save gas report\n          command: |\n            mv gasReporterOutput.json ./gasReporterOutput-$CIRCLE_NODE_INDEX.json\n      - persist_to_workspace:\n          root: .\n          paths:\n            - gasReporterOutput-*.json\n  test-gas-report:\n    docker:\n      - image: circleci/node:14.15.1-stretch\n    steps:\n      - checkout\n      - attach_workspace:\n          at: .\n      - run:\n          name: Upload gas reports\n          command: |\n            npx hardhat gas-reporter:merge gasReporterOutput-*.json\n            npx codechecks codechecks.unit.yml\n      - store_artifacts:\n          path: gasReporterOutput.json\n\nworkflows:\n  workflow-all:\n    jobs:\n      - test\n      - test-gas-report:\n          requires:\n            - test\n```\n","readmeFilename":"README.md","gitHead":"ce2ba8168d1e21f915f060e19241cded7a28cee5","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.8-para.0","_nodeVersion":"12.16.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-UUAs+MBn2y0Y0lc5/z7bgJt97WsH5fCpRGrNQFGK7KTZG9MoCs9P+uJTNZfNSfE1VKOh5Fhbg00uD2vP/kjHTg==","shasum":"fc0652b308fd1398f038e59acb47ded164f635e1","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.8-para.0.tgz","fileCount":34,"unpackedSize":72744,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiBofHCRA9TVsSAnZWagAAy6cP/AyzAC4MqCzclBOXomff\nNMEKFp5zy9xgJjcmWVJUUg87DjKzxXb9gAsDY8s56Dk8WCqwnNs/29EzUs0k\nskswjutYfYOWZbRnhl4RgQZSWfGkemaosmgqYNmncJeOnfNHCzfC9SZDcb+5\nVOPPKPMO8PuIpey5bnls4wk4P7+7461dbxgnNImfWeMdSEH8zqAJdoiIWyv4\nCBpKJDClBA76oMZyKtV0D7bVl3NOfqVBw+f0NfuiVFBODSKog3upx//tlniv\nX3JSpzrigLhz5z84ZDc/FX1YVWVpt5klHZFXlok6JlyJX9XlRMORE1GyIBvd\nmngzY/55ufNB/8m3AzMnKI7z1SLOy7HOjbTHiS8BplZMh0MZHpc8omC49Lrn\n9ipf1DPz7VcsaEAo/LczNWWi78h9eKzcMDzSsXO7vjIttIz3yk9P+trQmjiE\nWK8qDHL/xrCMU6W5BRWvJzd3RqWoR1ueFI2mIAeatoLLJzvJ8pSNuusRTVox\nzrqZOQVZyWALTzFksUeEgIumsuObewEyHK1D2TOUoZhBK1ZWE3YjEObyKusI\n77fZWDc7VSMHAOpHVpRy/9mQbY+6OqQweVCPhUU7WKgfmYk7Tyt+KqFVScuq\n80zbIvIeTAKwynxAEpcU5CbwoJVNnnbveKwtSDNuZGbyb5Mu2TR9KrT8CPh2\nFgzf\r\n=yujc\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIATEafaZovLDiX5GsHRw0j6hd7PeHG9AX88AikBcv77OAiA6+t71DPtuhWeWIjSW5Rh+zvnadcXNzOHrclTVoXSK6w=="}]},"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.8-para.0_1644595143266_0.6923569501204292"},"_hasShrinkwrap":false},"1.0.8":{"name":"hardhat-gas-reporter","version":"1.0.8","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc --project tsconfig.prod.json","build":"tsc --project tsconfig.prod.json","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-waffle":"^2.0.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethereum-waffle":"^3.2.1","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.6.1","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"^3.4.5","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"array-uniq":"1.0.3","eth-gas-reporter":"^0.2.24","sha1":"^1.1.1"},"gitHead":"e8fdf3be5bc954df7d7af5c29b6f112b54bd7936","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.8","_nodeVersion":"12.16.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-1G5thPnnhcwLHsFnl759f2tgElvuwdkzxlI65fC9PwxYMEe9cmjkVAAWTf3/3y8uP6ZSPiUiOW8PgZnykmZe0g==","shasum":"93ce271358cd748d9c4185dbb9d1d5525ec145e0","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.8.tgz","fileCount":34,"unpackedSize":73092,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiC7ZTCRA9TVsSAnZWagAA1jwQAJs1ghhGbrg4ppEWMTYy\nTLFqR1oRAmSxh/PGnFoc634UWuZRfJpANLcr1f/bpjh+aEwzoeMmLslZfXxA\nugX/PKHMRURX502giOHWNBqmbTXx1cVGk4zlUEVlh5iVK9MxReSCQAOUD+HS\njrPrTWkMTunfn0xCtO7KkIZOsIRg8UKlMXxE02TeFW/iEjSOD0pEOE90GtRD\nOrlO2cBHT1pwoVWYx4urlCOmM/O/skwedaFUM4ZBjqE17+ev5pPF+wte6VL+\nZ9/VVqynrztIQ3egXMg2Ess4U/3Ll2mrynWAmIkGCIurcV38FkIXYQGmTaIG\nXbBcxYuFJ5sxufKfqveZeEDFg8GRtGdYQjMqP9D8NJJyVxP0XgQMh+Vhw6Pr\nad4xfY3kxBY/a5g9qCIV+joxhe19H1DMEd5tZyl3jT1oGn6HHG/cGjaTjchr\nWurTes1c4ffud77lt4T4kX6ZnHxuOD+FwffAGDzlbUNTetoXgxCR/sna5XJU\niaNs4wKioCO1i7KoCJnEUMlmJxADv/TEfxlR8dgvp4fZbZDiL9DHs4pbDejg\niqRKR9YESJ4Lsa/xLWvxWbry9CX8isz8wUjPW8VajgqqK2nQxX02Uz6Em/Rb\neH3b1C0wUGr+kD90Zh9JzS21JgMVD9X48Bzas9OGrRAB/gVUhUFE7RGrEZ8D\nT0IP\r\n=lpJV\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD2bu5FVnlNIHtGwBTTXH0L0mBuCrmg6h5bKz4+8Kb2BwIhAPGltG3/5JHzfPCaO5rrzZxpQzLiclty0LFCDkXSTDHU"}]},"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.8_1644934739427_0.6860997156786506"},"_hasShrinkwrap":false},"1.0.9":{"name":"hardhat-gas-reporter","version":"1.0.9","description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"license":"MIT","main":"dist/src/index.js","types":"dist/src/index.d.ts","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"scripts":{"lint:fix":"prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && tslint --fix --config tslint.json --project tsconfig.json","lint":"tslint --config tslint.json --project tsconfig.json","test":"scripts/run-tests.sh","prepublishOnly":"tsc --project tsconfig.prod.json","build":"tsc --project tsconfig.prod.json","buidl":"tsc","watch":"tsc -w"},"devDependencies":{"@nomiclabs/hardhat-ethers":"^2.0.0","@nomiclabs/hardhat-truffle5":"^2.0.0","@nomiclabs/hardhat-waffle":"^2.0.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai":"^4.2.14","@types/fs-extra":"^5.0.4","@types/mocha":"7","@types/node":"^8.10.38","chai":"^4.2.0","dotenv":"^6.2.0","ethereum-waffle":"^3.2.1","ethers":"^5.0.0","ganache-cli":"^6.4.3","hardhat":"^2.11.0","mocha":"7","prettier":"^1.17.0","source-map-support":"^0.5.12","ts-node":"^8.1.0","tslint":"^5.16.0","tslint-config-prettier":"^1.18.0","tslint-plugin-prettier":"^2.0.1","typescript":"4.7.4","web3":"^1.3.0"},"peerDependencies":{"hardhat":"^2.0.2"},"dependencies":{"array-uniq":"1.0.3","eth-gas-reporter":"^0.2.25","sha1":"^1.1.1"},"gitHead":"df6aa85fb879faa97176e7695d503a3547691faf","bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","_id":"hardhat-gas-reporter@1.0.9","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-INN26G3EW43adGKBNzYWOlI3+rlLnasXTwW79YNnUhXPDa+yHESgt639dJEs37gCjhkbNKcRRJnomXEuMFBXJg==","shasum":"9a2afb354bc3b6346aab55b1c02ca556d0e16450","tarball":"https://registry.npmjs.org/hardhat-gas-reporter/-/hardhat-gas-reporter-1.0.9.tgz","fileCount":33,"unpackedSize":72608,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIA5JC5PEHqngYp3+AeSSh1FOgSsuiZLFZPJ00bZ+8zGcAiBv6CYrpKw3KJHFsyAHOQBmsc3uVV0ur9F22s+tlVY3Pw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjFmUVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo9Ag//cbWwpx3375f/aG2J0tOSp7bqkbtp1DL6i0d+oLTkl6dost1z\r\nyLvB1cy6a3Wbx8KXorNXdADehAAuo+Tx+MbB67xY4URJQ1WtVgU4lpL+C4hL\r\n2w2l7GqHkQOJ29VrqgygIvqWnv0z7wmSY81QSyvgKTzmvXwHtcknp/Hh+n6A\r\nMLgGDN1Uc2y9xnLJFoiL5Rv+I0UEh2UchvlinEEJfABna4JTrJ48B1Q71Y8/\r\nO2kccurVvkBGPB8ReLZLnXz/U3uXfta23Jy+WSzI+BtxvK4J/Nkk/eAXfe3D\r\nNVCNw2fg0ZG3cXW7nxxPaejcgLK3K8AYYYPWEXOoWpUCOXjktM3XkC4Y8M1c\r\nOgC74GYm2RFt1j9YnyZtIpinX7yz3+FPJ0EmW9LRxjaGDWRANFkjRmnWSLcI\r\n79qHujOpA/7ZB0YWTRRXQjJoTe30R6djT7oy7bYYGD20CO03hxU7Bwv3BEou\r\n9V5Z0Mimm+RP6IDi/bZooCTqTlBpwMCGYXTfF/3zim3TNoBIPVSmBu8Ks7Gr\r\n3LLl+OTu6otNosGFjlq5c1shgYfNdnMhkrN3a/+oOa98Zw+a4Khu9gZPEJfR\r\nKo3M3cCrr3ssj7qY2UeEQ26386n0k/hSCadmVd4sM0889X1KcnmuQanQiX1Z\r\nhmZgkozZ3O4BsKek/704utHwhiw6S274yD0=\r\n=80ET\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"cgewecke","email":"christophergewecke@gmail.com"},"directories":{},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hardhat-gas-reporter_1.0.9_1662412053307_0.7275221443294579"},"_hasShrinkwrap":false}},"time":{"created":"2020-10-28T23:11:19.651Z","1.0.0-beta.0":"2020-10-28T23:11:19.809Z","modified":"2022-09-05T21:07:33.568Z","1.0.0-beta.1":"2020-10-30T00:23:26.073Z","1.0.0":"2020-10-30T01:14:37.174Z","1.0.1":"2020-11-09T17:05:59.274Z","1.0.2-rc.0":"2020-11-16T23:00:58.297Z","1.0.2-rc.1":"2020-11-17T01:52:53.795Z","1.0.2":"2020-12-02T02:20:35.537Z","1.0.3":"2020-12-03T03:09:39.894Z","1.0.4-rc.0":"2020-12-21T22:59:52.398Z","1.0.4":"2020-12-21T23:34:45.238Z","1.0.5":"2021-11-29T16:54:59.781Z","1.0.6":"2021-11-29T19:37:43.434Z","1.0.7":"2022-01-10T02:43:48.630Z","1.0.8-para.0":"2022-02-11T15:59:03.407Z","1.0.8":"2022-02-15T14:18:59.575Z","1.0.9":"2022-09-05T21:07:33.488Z"},"maintainers":[{"name":"cgewecke","email":"christophergewecke@gmail.com"}],"description":"Hardhat plugin for eth-gas-reporter, a mocha reporter for Ethereum test suites","homepage":"https://github.com/cgewecke/hardhat-gas-reporter#readme","keywords":["ethereum","smart-contracts","hardhat","hardhat-plugin","unit tests","gas"],"repository":{"type":"git","url":"git+https://github.com/cgewecke/hardhat-gas-reporter.git"},"author":{"name":"cgewecke"},"bugs":{"url":"https://github.com/cgewecke/hardhat-gas-reporter/issues"},"license":"MIT","readme":"[![npm version](https://badge.fury.io/js/hardhat-gas-reporter.svg)](https://badge.fury.io/js/hardhat-gas-reporter)\n[![Build Status](https://travis-ci.org/cgewecke/hardhat-gas-reporter.svg?branch=master)](https://travis-ci.org/cgewecke/hardhat-gas-reporter)\n[![Codechecks](https://raw.githubusercontent.com/codechecks/docs/master/images/badges/badge-default.svg?sanitize=true)](https://codechecks.io)\n[![buidler](https://hardhat.org/buidler-plugin-badge.svg?1)](https://github.com/cgewecke/hardhat-gas-reporter)\n\n\n# hardhat-gas-reporter\n\n[eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter) plugin for [hardhat](http://gethardhat.com).\n\n## What\n\n**A Mocha reporter for Ethereum test suites:**\n\n- Gas usage per unit test.\n- Metrics for method calls and deployments.\n- National currency costs of deploying and using your contract system.\n\n### Example report\n\n![Screen Shot 2019-06-23 at 2 10 19 PM](https://user-images.githubusercontent.com/7332026/59982003-c30a4380-95c0-11e9-9d93-e3af979df227.png)\n\n## Installation\n\n```bash\nnpm install hardhat-gas-reporter --save-dev\n```\n\nAnd add the following to your `hardhat.config.js`:\n```js\nrequire(\"hardhat-gas-reporter\");\n```\n\nOr, if you are using TypeScript, add this to your hardhat.config.ts:\n```ts\nimport \"hardhat-gas-reporter\"\n```\n\n**Looking for buidler-gas-reporter docs?** [They moved here...][1]\n\n## Configuration\nConfiguration is optional.\n```js\nmodule.exports = {\n  gasReporter: {\n    currency: 'CHF',\n    gasPrice: 21\n  }\n}\n```\n:bulb: **Pro Tips**\n\n**Turning the plugin on/off**\n\nThe options include an `enabled` key that lets you toggle gas reporting on and off using shell\nenvironment variables. When `enabled` is false, mocha's (faster) default spec reporter is used.\nExample:\n\n```js\nmodule.exports = {\n  gasReporter: {\n    enabled: (process.env.REPORT_GAS) ? true : false\n  }\n}\n```\n\n**Migrating from Truffle**\n\nIf you already have `eth-gas-reporter` installed in your project, make sure you uninstall it before adding this plugin.\n`hardhat-gas-reporter` manages `eth-gas-reporter` as a dependency and having multiple versions in your lockfile can stop the reporter\nfrom working correctly.\n\n## Usage\n\nThis plugin overrides the built-in `test` task. Gas reports are generated by default with:\n```\nnpx hardhat test\n```\n\n### Options\n\n:warning: **CoinMarketCap API change** :warning:\n\nBeginning March 2020, CoinMarketCap requires an API key to access currency market\nprice data. The reporter uses an unprotected free tier key by default (10k reqs/mo). You can get\nyour own API key [here][55] and set it with the `coinmarketcap` option.\n\nIn order to retrieve the gas price of a particular blockchain, you can configure the `token` and `gasPriceApi` (API key rate limit may apply).\n\n**NOTE**: HardhatEVM and ganache-cli implement the Ethereum blockchain. To get accurate gas measurements for other chains you may need to run your tests against development clients developed specifically for those networks.\n\n| Option            | Type                   | Default                                                                    | Description                                                                                                                                                                                                                                  |\n| ----------------- | ---------------------- | -------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| enabled          | _Boolean_               | true                    | Always generate gas reports when running the hardhat test command.                                                                                                                                                           |\n| currency          | _String_               | 'EUR'                                                                      | National currency to represent gas costs in. Exchange rates loaded at runtime from the `coinmarketcap` api. Available currency codes can be found [here](https://coinmarketcap.com/api/documentation/v1/#section/Standards-and-Conventions). |\n| coinmarketcap     | _String_               | (unprotected API key)                                                      | [API key][55] to use when fetching current market price data. (Use this if you stop seeing price data)                                                                                                                                       |\n| gasPrice          | _Number_               | (varies)                                                                   | Denominated in `gwei`. Default is loaded at runtime from the `eth gas station` api                                                                                                                                                           |\n| token             | _String_               | 'ETH'                                                                      | The reference token for gas price                                                                                                                                                                                                            |\n| gasPriceApi       | _String_               | [Etherscan](https://api.etherscan.io/api?module=proxy&action=eth_gasPrice) | The API endpoint to retrieve the gas price. Find below other networks.                                                                                                                                                                       |\n| outputFile        | _String_               | stdout                                                                     | File path to write report output to                                                                                                                                                                                                          |\n| noColors          | _Boolean_              | false                                                                      | Suppress report color. Useful if you are printing to file b/c terminal colorization corrupts the text.                                                                                                                                       |\n| onlyCalledMethods | _Boolean_              | true                                                                       | Omit methods that are never called from report.                                                                                                                                                                                              |\n| rst               | _Boolean_              | false                                                                      | Output with a reStructured text code-block directive. Useful if you want to include report in RTD                                                                                                                                            |\n| rstTitle          | _String_               | \"\"                                                                         | Title for reStructured text header (See Travis for example output)                                                                                                                                                                           |\n| showTimeSpent     | _Boolean_              | false                                                                      | Show the amount of time spent as well as the gas consumed                                                                                                                                                                                    |\n| excludeContracts  | _String[]_             | []                          | Contracts (or folders) to exclude from report. Ex: `['Migrations.sol', 'Wallets/']`. (See [v1.0.3 release notes][45] for additional usage help)                                                               |\n| src               | _String_               | \"contracts\"                                                                | Folder in root directory to begin search for `.sol` files. This can also be a path to a subfolder relative to the root, e.g. \"planets/annares/contracts\"                                                                                     |\n| url               | _String_               | `web3.currentProvider.host`                                                | RPC client url (ex: \"http://localhost:8545\")                                                                                                                                                                                                 |\n| proxyResolver     | _Function_             | none                                                                       | Custom method to resolve identity of methods managed by a proxy contract.                                                                                                                                                                    |\n| artifactType      | _Function_ or _String_ | \"truffle-v5\"                                                               | Compilation artifact format to consume. (See [advanced use](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/advanced.md).)                                                                                                     |\n| showMethodSig     | _Boolean_              | false                                                                      | Display complete method signatures. Useful when you have overloaded methods you can't tell apart.                                                                                                                                            |\n| maxMethodDiff     | _Number_               | undefined                                                                  | Codechecks failure threshold, triggered when the % diff for any method is greater than `number` (integer)                                                                                                                                    |\n| maxDeploymentDiff | _Number_               | undefined                                                                  | Codechecks failure threshold, triggered when the % diff for any deployment is greater than `number` (integer)                                                                                                                                |\n| remoteContracts | _RemoteContract[]_               | `[]`                  | Contracts pre-deployed to a (forked) network which the reporter should collect gas usage data for. (See [RemoteContract type][44] and [usage example][47])                                |\n\n[44]: https://github.com/cgewecke/hardhat-gas-reporter/blob/master/src/types.ts#L27\n[45]: https://github.com/cgewecke/hardhat-gas-reporter/releases/tag/v1.0.3\n[47]: https://github.com/cgewecke/hardhat-gas-reporter/issues/46#issuecomment-728639165\n[55]: https://coinmarketcap.com/api/pricing/\n\n#### `token` and `gasPriceApi` options example\n\n| Network            | token | gasPriceApi                                                            |\n| ------------------ | ----- | ---------------------------------------------------------------------- |\n| Ethereum (default) | ETH   | https://api.etherscan.io/api?module=proxy&action=eth_gasPrice          |\n| Binance            | BNB   | https://api.bscscan.com/api?module=proxy&action=eth_gasPrice           |\n| Polygon            | MATIC | https://api.polygonscan.com/api?module=proxy&action=eth_gasPrice       |\n| Avalanche          | AVAX  | https://api.snowtrace.io/api?module=proxy&action=eth_gasPrice          |\n| Heco               | HT    | https://api.hecoinfo.com/api?module=proxy&action=eth_gasPrice          |\n| Moonriver          | MOVR  | https://api-moonriver.moonscan.io/api?module=proxy&action=eth_gasPrice |\n\nThese APIs have [rate limits](https://docs.etherscan.io/support/rate-limits). Depending on the usage, it might require an [API Key](https://docs.etherscan.io/getting-started/viewing-api-usage-statistics).\n\n> NB: Any gas price API call which returns a JSON-RPC response formatted like this is supported: `{\"jsonrpc\":\"2.0\",\"id\":73,\"result\":\"0x6fc23ac00\"}`.\n\n\n## Documentation\n\nOther useful documentation can be found at [eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter)\n\n[1]: https://github.com/cgewecke/buidler-gas-reporter/tree/buidler-final#installation\n\n## Parallelization\n\nThis plugin also adds a Hardhat Task for merging several `gasReporterOutput.json` files, which are generated by [eth-gas-reporter](https://github.com/cgewecke/eth-gas-reporter) when [running your tests with in parallelized jobs in CI](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/gasReporterOutput.md).\n\nTo use the task you just have to give it the filepaths or a glob pattern pointing to all of the reports:\n```bash\nnpx hardhat gas-reporter:merge 'gasReporterOutput-*.json'\n```\n\nHere is an example `config.yml` file used by CircleCI to run the tests on parallel first, and then merge the reports\n\n```yaml\nversion: 2.1\n\njobs:\n  test:\n    docker:\n      - image: circleci/node:14.15.1-stretch\n    parallelism: 8\n    steps:\n      - attach_workspace:\n          at: .\n      - run:\n          name: Run tests\n          command: |\n            circleci tests glob 'test/**/*.spec.ts' |\n            circleci tests split |\n            xargs npx hardhat test\n      - run:\n          name: Save gas report\n          command: |\n            mv gasReporterOutput.json ./gasReporterOutput-$CIRCLE_NODE_INDEX.json\n      - persist_to_workspace:\n          root: .\n          paths:\n            - gasReporterOutput-*.json\n  test-gas-report:\n    docker:\n      - image: circleci/node:14.15.1-stretch\n    steps:\n      - checkout\n      - attach_workspace:\n          at: .\n      - run:\n          name: Upload gas reports\n          command: |\n            npx hardhat gas-reporter:merge gasReporterOutput-*.json\n            npx codechecks codechecks.unit.yml\n      - store_artifacts:\n          path: gasReporterOutput.json\n\nworkflows:\n  workflow-all:\n    jobs:\n      - test\n      - test-gas-report:\n          requires:\n            - test\n```\n","readmeFilename":"README.md","users":{"takez0":true}}